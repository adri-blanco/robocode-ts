import { Game, RobotConfig, RobotAI, ScannedRobotInfo } from "../types/RobotTypes.js";
export declare class Robot {
    name: string;
    x: number;
    y: number;
    angle: number;
    color: string;
    health: number;
    energy: number;
    velocity: number;
    turnRate: number;
    gunAngle: number;
    radarAngle: number;
    radarTurnRate: number;
    scannedRobots: ScannedRobotInfo[];
    readonly radius: number;
    readonly maxHealth: number;
    readonly maxEnergy: number;
    readonly gunCooldown: number;
    readonly radarWidth: number;
    readonly radarRange: number;
    private prevX;
    private prevY;
    private collisionCooldown;
    private lastCollision;
    private lastShot;
    game: Game | null;
    script: RobotAI | null;
    constructor(name: string, config: RobotConfig);
    reset(): void;
    damage(amount: number): void;
    update(deltaTime: number): Promise<void>;
    render(ctx: CanvasRenderingContext2D): void;
    private renderRadar;
    ahead(distance: number): Promise<void>;
    turnRight(degrees: number): Promise<void>;
    turnLeft(degrees: number): Promise<void>;
    turnRadarRight(degrees: number): Promise<void>;
    turnRadarLeft(degrees: number): Promise<void>;
    fire(power: number): void;
    scan(): ScannedRobotInfo[];
    onHit(): void;
    onScannedRobot(robot: ScannedRobotInfo): void;
    onRobotCollision(robot: Robot): void;
    onHitWall(wall: "top" | "right" | "bottom" | "left"): void;
    getLastCollision(): Robot | null;
    storePreviousPosition(): void;
    resetToStoredPosition(): void;
    private normalizeAngle;
}
//# sourceMappingURL=Robot.d.ts.map